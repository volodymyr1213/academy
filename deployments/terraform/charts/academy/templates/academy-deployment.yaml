apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "academy.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "academy.name" . }}
    helm.sh/chart: {{ include "academy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.academy.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "academy.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "academy.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.academy.serviceAccountName }}
{{- if .Values.imageSecret.enabled }}
      imagePullSecrets:
{{ toYaml .Values.imageSecret.allSecrets | indent 6 }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.academy.image.repository }}"
        imagePullPolicy: {{ .Values.academy.image.pullPolicy }}
{{- if .Values.globalEnvironments.enabled }}
        env:
{{ toYaml .Values.globalEnvironments.environments | indent 8 }}
        - name: MYSQL_HOST
          value: {{ .Values.mysql.service.serviceName }}
{{- end }}
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 5000
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 5000
        resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
